(function() {var implementors = {};
implementors["backtrace"] = [{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"backtrace/struct.BacktraceFrame.html\" title=\"struct backtrace::BacktraceFrame\">BacktraceFrame</a>&gt;&gt; for <a class=\"struct\" href=\"backtrace/struct.Backtrace.html\" title=\"struct backtrace::Backtrace\">Backtrace</a>",synthetic:false,types:["backtrace::capture::Backtrace"]},];
implementors["either"] = [{text:"impl&lt;L, R&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;R, L&gt;&gt; for <a class=\"enum\" href=\"either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;L, R&gt;",synthetic:false,types:["either::Either"]},];
implementors["holochain_cas_implementations"] = [{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"riker/protocol/enum.ActorMsg.html\" title=\"enum riker::protocol::ActorMsg\">ActorMsg</a>&lt;<a class=\"enum\" href=\"holochain_cas_implementations/actor/enum.Protocol.html\" title=\"enum holochain_cas_implementations::actor::Protocol\">Protocol</a>&gt;&gt; for <a class=\"enum\" href=\"holochain_cas_implementations/actor/enum.Protocol.html\" title=\"enum holochain_cas_implementations::actor::Protocol\">Protocol</a>",synthetic:false,types:["holochain_cas_implementations::actor::Protocol"]},];
implementors["num_rational"] = [{text:"impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(</a>T, T<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">)</a>&gt; for <a class=\"struct\" href=\"num_rational/struct.Ratio.html\" title=\"struct num_rational::Ratio\">Ratio</a>&lt;T&gt;",synthetic:false,types:["num_rational::Ratio"]},];
implementors["riker"] = [{text:"impl&lt;Msg:&nbsp;<a class=\"trait\" href=\"riker/protocol/trait.Message.html\" title=\"trait riker::protocol::Message\">Message</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"riker/protocol/enum.ActorMsg.html\" title=\"enum riker::protocol::ActorMsg\">ActorMsg</a>&lt;Msg&gt;&gt; for <a class=\"enum\" href=\"riker/protocol/enum.ChannelMsg.html\" title=\"enum riker::protocol::ChannelMsg\">ChannelMsg</a>&lt;Msg&gt;",synthetic:false,types:["riker::protocol::ChannelMsg"]},{text:"impl&lt;Msg:&nbsp;<a class=\"trait\" href=\"riker/protocol/trait.Message.html\" title=\"trait riker::protocol::Message\">Message</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"riker/protocol/enum.ActorMsg.html\" title=\"enum riker::protocol::ActorMsg\">ActorMsg</a>&lt;Msg&gt;&gt; for <a class=\"enum\" href=\"riker/protocol/enum.IOMsg.html\" title=\"enum riker::protocol::IOMsg\">IOMsg</a>&lt;Msg&gt;",synthetic:false,types:["riker::protocol::IOMsg"]},{text:"impl&lt;Msg:&nbsp;<a class=\"trait\" href=\"riker/protocol/trait.Message.html\" title=\"trait riker::protocol::Message\">Message</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"riker/protocol/enum.ActorMsg.html\" title=\"enum riker::protocol::ActorMsg\">ActorMsg</a>&lt;Msg&gt;&gt; for <a class=\"enum\" href=\"riker/protocol/enum.ESMsg.html\" title=\"enum riker::protocol::ESMsg\">ESMsg</a>&lt;Msg&gt;",synthetic:false,types:["riker::protocol::ESMsg"]},{text:"impl&lt;Msg:&nbsp;<a class=\"trait\" href=\"riker/protocol/trait.Message.html\" title=\"trait riker::protocol::Message\">Message</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"riker/protocol/enum.ActorMsg.html\" title=\"enum riker::protocol::ActorMsg\">ActorMsg</a>&lt;Msg&gt;&gt; for <a class=\"enum\" href=\"riker/protocol/enum.CQMsg.html\" title=\"enum riker::protocol::CQMsg\">CQMsg</a>&lt;Msg&gt;",synthetic:false,types:["riker::protocol::CQMsg"]},{text:"impl&lt;Msg:&nbsp;<a class=\"trait\" href=\"riker/protocol/trait.Message.html\" title=\"trait riker::protocol::Message\">Message</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"riker/protocol/enum.ActorMsg.html\" title=\"enum riker::protocol::ActorMsg\">ActorMsg</a>&lt;Msg&gt;&gt; for <a class=\"struct\" href=\"riker/protocol/struct.Identify.html\" title=\"struct riker::protocol::Identify\">Identify</a>",synthetic:false,types:["riker::protocol::Identify"]},{text:"impl&lt;Msg:&nbsp;<a class=\"trait\" href=\"riker/protocol/trait.Message.html\" title=\"trait riker::protocol::Message\">Message</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"riker/protocol/enum.ActorMsg.html\" title=\"enum riker::protocol::ActorMsg\">ActorMsg</a>&lt;Msg&gt;&gt; for <a class=\"struct\" href=\"riker/protocol/struct.Info.html\" title=\"struct riker::protocol::Info\">Info</a>",synthetic:false,types:["riker::protocol::Info"]},{text:"impl&lt;Msg:&nbsp;<a class=\"trait\" href=\"riker/protocol/trait.Message.html\" title=\"trait riker::protocol::Message\">Message</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"riker/protocol/enum.ActorMsg.html\" title=\"enum riker::protocol::ActorMsg\">ActorMsg</a>&lt;Msg&gt;&gt; for <a class=\"struct\" href=\"riker/protocol/struct.DeadLetter.html\" title=\"struct riker::protocol::DeadLetter\">DeadLetter</a>&lt;Msg&gt;",synthetic:false,types:["riker::protocol::DeadLetter"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"riker/protocol/enum.ActorMsg.html\" title=\"enum riker::protocol::ActorMsg\">ActorMsg</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>",synthetic:false,types:["alloc::string::String"]},{text:"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"riker/protocol/enum.ActorMsg.html\" title=\"enum riker::protocol::ActorMsg\">ActorMsg</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;&gt; for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>",synthetic:false,types:[]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"enum\" href=\"riker/protocol/enum.ActorMsg.html\" title=\"enum riker::protocol::ActorMsg\">ActorMsg</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>",synthetic:false,types:[]},];
implementors["rmp"] = [{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"rmp/enum.Marker.html\" title=\"enum rmp::Marker\">Marker</a>",synthetic:false,types:["rmp::marker::Marker"]},];
implementors["serde"] = [{text:"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">&amp;'a [</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt; for <a class=\"struct\" href=\"serde/bytes/struct.Bytes.html\" title=\"struct serde::bytes::Bytes\">Bytes</a>&lt;'a&gt;",synthetic:false,types:["serde::bytes::Bytes"]},{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;&gt; for <a class=\"struct\" href=\"serde/bytes/struct.ByteBuf.html\" title=\"struct serde::bytes::ByteBuf\">ByteBuf</a>",synthetic:false,types:["serde::bytes::bytebuf::ByteBuf"]},];
implementors["wasmi"] = [{text:"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"enum\" href=\"wasmi/enum.Error.html\" title=\"enum wasmi::Error\">Error</a>",synthetic:false,types:["wasmi::Error"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
