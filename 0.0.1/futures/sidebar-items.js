initSidebarItems({"enum":[["Async","Indicates whether a value is available, or if the current task has been scheduled for later wake-up instead."],["Never","A type with no possible values."]],"macro":[["task_local","A macro to create a `static` of type `LocalKey`."],["try_ready","A macro for extracting the successful type of a `Poll<T, E>`."]],"mod":[["channel","Cross-task communication."],["executor","Task execution."],["future","Asynchronous values."],["io","Asynchronous I/O."],["never","This module contains the `Never` type."],["prelude","A \"prelude\" for crates using the `futures` crate."],["sink","Asynchronous sinks."],["stream","Asynchronous streams."],["task","Tools for working with tasks."]],"trait":[["Future","A future represents an asychronous computation that may fail."],["FutureExt","An extension trait for `Future`s that provides a variety of convenient combinator functions."],["IntoFuture","Types that can be converted into a future."],["Sink","A `Sink` is a value into which other values can be sent, asynchronously."],["SinkExt","An extension trait for `Sink`s that provides a variety of convenient combinator functions."],["Stream","A stream of values produced asynchronously."],["StreamExt","An extension trait for `Stream`s that provides a variety of convenient combinator functions."]],"type":[["Poll","A convenience wrapper for `Result<Async<T>, E>`."]]});