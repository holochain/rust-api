initSidebarItems({"enum":[["CreateError","Error type when an actor fails to start during `actor_of`."],["Strategy","Supervision strategy"],["SysTopic","System topics used by the `event_stream` channel"]],"fn":[["dead_letter",""]],"struct":[["ActorCell",""],["ActorRef","An actor reference exposes methods to interact with its underlying actor."],["ActorSelection","A selection represents part of the actor heirarchy, allowing messages to be sent to all actors in the selection."],["ActorUri","An `ActorUri` represents the location of an actor, including the path and actor system host."],["All","A channel topic representing all topics `*`"],["Channel","A specialized actor for providing Publish/Subscribe capabilities to users."],["Context","Provides context, including the actor system during actor execution."],["PersistenceConf",""],["Props","Provides instances of `ActorProducer` for use when creating Actors (`actor_of`)."],["RestartError","Error type when an actor fails to restart."],["SysChannels",""],["SystemChannel","A specialized actor for providing Publish/Subscribe capabilities for system messages."],["Topic","Topics allow channel subscribers to filter messages by interest"],["TryMsgError","Error type when an `try_tell` fails on `Option<ActorRef<Msg>>`"]],"trait":[["Actor","An Actor represents a struct that will be scheduled for execution when it is sent a message."],["ActorArgs",""],["ActorProducer","Represents the underlying Actor factory function for creating instances of `Actor`."],["ActorRefFactory","Produces `ActorRef`s. `actor_of` blocks on the current thread until the actor has successfully started or failed to start."],["ActorSelectionFactory",""],["CellInternal","`ActorCell` internal API."],["CellPublic","`ActorCell` public API."],["SysTell","Implement to provide system message routing to actors, e.g. `ActorRef` and `ActorSelection`"],["Tell",""],["TmpActorRefFactory","Produces `ActorRef`s under the `temp` guardian actor."],["TryTell","Implement to provide possible message routing to actors, e.g. `Option<ActorRef>`"]],"type":[["ActorId",""],["BoxActor","The actor trait object"],["BoxActorProd","A `Clone`, `Send` and `Sync` `ActorProducer`"],["MsgResult",""]]});